<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iocoder.yudao.module.stucms.dal.mysql.score.ScoreMapper">

    <sql id="selectScoreSearchPage">
        SELECT sc.score_id,
               st.student_name,
               e.exam_name,
               st.student_uid,
               sc.student_id,
               sc.exam_id,
               format(AVG(sc.score), 2) as avg,
               SUM(sc.score)            as sum,
               format(STD(sc.score), 2) as std
        FROM stucms_score AS sc
                 LEFT JOIN stucms_student AS st ON sc.student_id = st.student_id
                 LEFT JOIN stucms_exam AS e ON sc.exam_id = e.exam_id
            ${ew.customSqlSegment}

        GROUP BY
            st.student_id,
            e.exam_id
        ORDER BY
            e.exam_id,
            st.student_id
    </sql>

    <select id="selectScoreSearchPageByXml"
            resultType="cn.iocoder.yudao.module.stucms.controller.admin.score.vo.search.ScoreSearchRespVO">
        <include refid="selectScoreSearchPage"/>
    </select>

    <select id="selectScoreSearchListByXml"
            resultType="cn.iocoder.yudao.module.stucms.controller.admin.score.vo.search.ScoreSearchRespVO">
        <include refid="selectScoreSearchPage"/>
    </select>

    <select id="selectScoreAllListByXml"
            resultType="cn.iocoder.yudao.module.stucms.controller.admin.score.vo.all.ScoreAllRespVo">
        SELECT c.course_name            course,
               c.course_id              cid,
               e.exam_id                eid,
               e.exam_name              exam,
               c.course_full            `full`,
               count(*)                 join_num,
               sum(CASE
                       WHEN sc.score >= (0.9 * (SELECT course_full FROM stucms_course WHERE course_id = c.course_id))
                           THEN 1
                       ELSE 0 END)      'youxiu',
               sum(
                       CASE

                           WHEN sc.score >= (
                                   0.8 * (
                                   SELECT course_full
                                   FROM stucms_course
                                   WHERE course_id = c.course_id
                               ))
                               AND sc.score &lt; (
                                       0.9 * (
                                       SELECT course_full
                                       FROM stucms_course
                                       WHERE course_id = c.course_id
                                   )) THEN
                               1
                           ELSE 0
                           END
                   )                    'lianghao',
               sum(
                       CASE

                           WHEN sc.score >= (
                                   0.6 * (
                                   SELECT course_full
                                   FROM stucms_course
                                   WHERE course_id = c.course_id
                               ))
                               AND sc.score &lt; (
                                       0.8 * (
                                       SELECT course_full
                                       FROM stucms_course
                                       WHERE course_id = c.course_id
                                   )) THEN
                               1
                           ELSE 0
                           END
                   )                    'jige',
               sum(CASE
                       WHEN sc.score &lt; (0.6 * (SELECT course_full FROM stucms_course WHERE course_id = c.course_id))
                           THEN 1
                       ELSE 0 END)      'bujige',
               format(STD(sc.score), 2) std,
               format(AVG(sc.score), 2) avg,
               MAX(sc.score)            max,
               min(sc.score)            min
        FROM stucms_score sc
                 JOIN stucms_course c ON c.course_id = sc.course_id
                 JOIN stucms_student u ON u.student_id = sc.student_id
                 JOIN stucms_exam e ON e.exam_id = sc.exam_id
            ${ew.customSqlSegment}
        GROUP BY
            course
        ORDER BY
            cid
    </select>

</mapper>
